{#
/**
 * @file
 * Theme override to display all the fields in a row.
 *
 * Available variables:
 * - view: The view in use.
 * - fields: A list of fields, each one contains:
 *   - content: The output of the field.
 *   - raw: The raw data for the field, if it exists. This is NOT output safe.
 *   - class: The safe class ID to use.
 *   - handler: The Views field handler controlling this field.
 *   - inline: Whether or not the field should be inline.
 *   - wrapper_element: An HTML element for a wrapper.
 *   - wrapper_attributes: List of attributes for wrapper element.
 *   - separator: An optional separator that may appear before a field.
 *   - label: The field's label text.
 *   - label_element: An HTML element for a label wrapper.
 *   - label_attributes: List of attributes for label wrapper.
 *   - label_suffix: Colon after the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 *   - has_label_colon: A boolean indicating whether to display a colon after
 *     the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 * - row: The raw result from the query, with all data it fetched.
 *
 * @see template_preprocess_views_view_fields()
 */
#}
<div class="store-locator-result">
  <div class="store-locator-result__column-one">
    {% set distance = fields.search_api_distance %}

    <div class="store-locator-result__distance">
      <i class="icon icon-location"></i>
      {{ distance.content }}
    </div>
  </div>
  <div class="store-locator-result__column-two">
    {% set field_names = ['name', 'address'] %}
    {% for field_name in field_names -%}
      {% set field = attribute(fields, field_name) %}
      <div class="store-locator-result__{{field_name}}">{{ field.content }}</div>
    {%- endfor %}
  </div>
  <div class="store-locator-result__column-three">
    {% set field_names = ['field_phone_number', 'field_web_address_1', 'latlon'] %}
    {% for field_name in field_names -%}
      <div>
        {% set field = attribute(fields, field_name) %}
        {%- if field.label_element -%}
          <{{ field.label_element }}{{ field.label_attributes }}>{{ field.label }}{{ field.label_suffix }}</{{ field.label_element }}>
        {%- else -%}
          {{ field.label }}{{ field.label_suffix }}
        {%- endif %}
        <{{ field.element_type }}{{ field.element_attributes }}>{{ field.content }}</{{ field.element_type }}>
      </div>
   {%- endfor %}
  </div>
</div>
